val l = List("49,4,Diamondback Adult Sorrento Mountain Bike 2014,,299.98,http://images.acmesports.sports/Diamondback+Adult+Sorrento+Mountain+Bike+2014", "50,4,Quest Q64 10 FT. x 10 FT. Slant Leg Instant U,,59.98,http://images.acmesports.sports/Quest+Q64+10+FT.+x+10+FT.+Slant+Leg+Instant+Up+Canopy", "51,4,MAC Sports Collapsible Wagon,,99.99,http://images.acmesports.sports/MAC+Sports+Collapsible+Wagon", "52,4,Easton Mako Youth Bat 2014 (-11),,249.97,http://images.acmesports.sports/Easton+Mako+Youth+Bat+2014+%28-11%29", "53,4,adidas Brazuca 2014 Top Glider Soccer Ball,,29.99,http://images.acmesports.sports/adidas+Brazuca+2014+Top+Glider+Soccer+Ball", "54,4,Nike+ Fuelband SE,,99.99,http://images.acmesports.sports/Nike%2B+Fuelband+SE", "55,4,adidas Brazuca 2014 Top RepliquÃ© Soccer Ball,,29.99,http://images.acmesports.sports/adidas+Brazuca+2014+Top+Repliqu%C3%A9+Soccer+Ball")


l.sortBy(rec => -rec.split(",")(4).toFloat).take(3)

GroupByKey output:
prodcat: RDD[(String, Iterable[String])]


def topNProducts(rec: (String, Iterable[String]), topN: Int): Iterable[(String, String)] = {
	rec._2.toList.sortBy(r => -r.split(",")(4).toFloat).take(topN).map(k => (rec._1, k))
}

prodCat.flatMap(rec => topNProducts(rec, 5)).collect().foreach(println)


def topNProducts(rec: (String, Iterable[String]), topN: Int): Iterable[(String, String)] = {
	val list = rec._2.toList
	val topNPrices = list.map(rec => rec.split(",")(4).toFloat).sortBy(rec=> -rec).disctinct.take(3)
	val sortedList = 
	rec._2.toList.sortBy(r => -r.split(",")(4).toFloat).take(topN).map(k => (rec._1, k))
}