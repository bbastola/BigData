Problem:

Get only completed orders (hint: order_state = ‘COMPLETE’)
Get revenue for each department per day
Insert output into a new table
Hint: Join all tables except customers

Please provide following as output:

Number of records
Sample output of 10 records (It should have order_date, department_name and revenue for each department)

Solutoin:

Core Spark

ordersRDD = sc.textFile("/public/retail_db/orders")
departmentsRDD = sc.textFile("/public/retail_db/departments")
order_itemsRDD = sc.textFile("/public/retail_db/order_items")
productsRDD = sc.textFile("/public/retail_db/products")
categoriesRDD = sc.textFile("/public/retail_db/categories")

depMap = departmentsRDD.map(lambda r: (int(r.split(",")[0]), r.split(",")))
catMap = categoriesRDD.map(lambda r: (int(r.split(",")[1]), int(r.split(",")[0])))
catJoinDep = catMap.join(depMap).map(lambda r: (r[1][0], r[1][1][1]))

prodMap = productsRDD.map(lambda r: (int(r.split(",")[1]), int(r.split(",")[0])))
prodJoinCat = prodMap.join(catJoinDep).map(lambda r: r[1])

oiMap = order_itemsRDD.map(lambda r: (int(r.split(",")[2]), (int(r.split(",")[1]), float(r.split(",")[4]))))
oiJoinProd = prodJoinCat.join(oiMap).map(lambda r: (r[1][1][0], (r[1][0], r[1][1][1])))

ordersFilter = ordersRDD.filter(lambda r: r.split(",")[3] == 'COMPLETE')
ordersMap = ordersFilter.map(lambda r: (int(r.split(",")[0]), r.split(",")[1]))

finalTable = oiJoinProd.join(ordersMap).map(lambda r: ((r[1][1][:10], r[1][0][0]), r[1][0][1]))

//revenue per department per day
revenue = finalTable.reduceByKey(lambda x,y: x+y).sortByKey() 

//revenue per department per day and total order count
revenueWithCount = finalTable.aggregateByKey((0.0, 0), lambda x,y: (x[0] + y, x[1] + 1), lambda x, y: (x[0] + y[0], x[1] + y[1])).sortByKey()

//top 5 revenue per department per day
top5Revenue = finalTable.groupByKey().flatMap(lambda r: sorted(r[1], key= lambda x: x, reverse=True)[:5])




