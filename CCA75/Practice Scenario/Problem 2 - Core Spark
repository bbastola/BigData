Details - Duration 15 to 20 minutes

Data is available in local file system /home/cloudera/retail_db
Source directories: /home/cloudera/retail_db/orders and /home/cloudera/retail_db/customers
Source delimiter: comma (“,”)
Source Columns - orders - order_id, order_date, order_customer_id, order_status
Source Columns - customers - customer_id, customer_fname, customer_lname and many more

Get the customers who have not placed any orders, sorted by customer_lname and then customer_fname
Target Columns: customer_lname, customer_fname
Number of files - 1
Target Directory: /user/<YOUR_USER_ID>/solutions/solutions02/inactive_customers
Target File Format: TEXT
Target Delimiter: comma (“, ”)
Compression: N/A
Validation

SOLUTION:

orders = open("/home/cloudera/retail_db/orders/part-00000").read().splitlines()
ordersRDD = sc.parallelize(orders)
customers = open("/home/cloudera/retail_db/customers/part-00000").read().splitlines()
customersRDD = sc.parallelize(customers)


ordersMap = ordersRDD.map(lambda rec: (int(rec.split(",")[2]), int(rec.split(",")[0])))
customersMap = customersRDD.map(lambda rec: (int(rec.split(",")[0]),(rec.split(",")[2], rec.split(",")[1])))

customersJoinOrders = customersMap.leftOuterJoin(ordersMap)

customersNoOrder = customersJoinOrders.filter(lambda rec: rec[1][1] == None)

customersNoOrderMap = customersNoOrder.map(lambda rec: (rec[1][0], str(rec[1][0][0] + ", " + rec[1][0][1])))

customerNoOrderMapSort = customersNoOrderMap.sortByKey()

customerFinalList = customerNoOrderMapSort.map(lambda rec: rec[1])

customerFinalList.saveAsTextFile("/user/cloudera/solutions/solutions02/inactive_customers")

for i in (sc.textFile("/user/cloudera/solutions/solutions02/inactive_customers").take(30)): print i

