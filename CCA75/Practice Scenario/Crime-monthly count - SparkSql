Details - Duration 40 minutes

Choose language of your choice Python or Scala
Data is available in HDFS file system under /public/crime/csv
You can check properties of files using hadoop fs -ls -h /public/crime/csv
Structure of data (ID,Case Number,Date,Block,IUCR,Primary Type,Description,Location Description,Arrest,Domestic,Beat,
District,Ward,Community Area,FBI Code,X Coordinate,Y Coordinate,Year,Updated On,Latitude,Longitude,Location)

5679860,HN487201,07/24/2007 11:10:00 PM,116XX S RACINE AVE,0560,ASSAULT,SIMPLE,RESIDENCE,false,true,0524,
005,34,53,08A,1170418,1827643,2007,04/15/2016 08:55:02 AM,41.682532092,-87.651799575,"(41.682532092, -87.651799575)"

File format - text file
Delimiter - “,”

Get monthly count of primary crime type, sorted by month in ascending and number of crimes per type in descending order
Store the result in HDFS path /user/<YOUR_USER_ID>/solutions/solution01/crimes_by_type_by_month
Output File Format: TEXT
Output Columns: Month in YYYYMM format, crime count, crime type
Output Delimiter: \t (tab delimited)
Output Compression: gzip

Solution:

crimeData = sc.textFile("/public/crime/csv")
header = crimeData.first()
crimeDataNoHeader = crimeData.filter(lambda rec: rec!=header)

from pyspark.sql import Row
crimeDataDF = crimeDataNoHeader.map(lambda rec: Row(date=rec.split(",")[2], crime_type=rec.split(",")[5])).toDF()
crimeDataDF.registerTempTable("crime_table")
sqlContext.sql("select * from crime_table limit 10").show()

finalResult = sqlContext.sql("select concat(substr(date, 7, 4), substr(date, 1, 2)) crime_Date, count(1) crime_count, \
crime_type from crime_table \
group by concat(substr(date, 7, 4), substr(date, 1, 2)), crime_type \
order by crime_Date, crime_count desc")

finalResult.rdd.map(lambda rec: (str(rec[0]) + "\t" + str(rec[1]) + "\t" + str(rec[2]))).coalesce(2).saveAsTextFile("/user/bbastola/solutions/solutions01/crimes_by_type_month_SQL", compressionCodecClass="org.apache.hadoop.io.compress.GzipCodec")

To check from spark shell:
for i in sc.textFile("/user/bbastola/solutions/solutions01/crimes_by_type_month_SQL").take(10): print i